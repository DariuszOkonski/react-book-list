{"version":3,"sources":["components/Navigation.jsx","reducers/BookReducer.jsx","types/types.jsx","contexts/BookContext.jsx","components/Header.jsx","components/BookItem.jsx","components/Empty.jsx","components/BookItems.jsx","views/BookList.jsx","components/FormAdd.jsx","views/AddBook.jsx","App.jsx","index.jsx"],"names":["Navigation","id","className","exact","to","bookReducer","state","action","type","v1","title","book","author","BookContext","createContext","BookContextProvider","props","useReducer","books","dispatch","Provider","value","children","Header","useContext","length","defaultProps","BookItem","propsTypes","PropTypes","number","isRequired","string","Empty","information","BookItems","map","key","BookList","FormAdd","history","useHistory","useState","setTitle","setAuthor","onSubmit","e","preventDefault","push","placeholder","required","onChange","target","onClick","AddBook","App","basename","process","path","component","render","ReactDOM","document","getElementById"],"mappings":"gPAqBeA,EAlBI,WACjB,OACE,yBAAKC,GAAG,cACN,wBAAIC,UAAU,aACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,SAEF,wBAAIF,UAAU,YACZ,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,QAAlB,aAEF,wBAAIF,UAAU,YACZ,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,UAAlB,a,uBCFKC,EATK,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,ICLoB,WDMlB,MAAM,GAAN,mBAAWF,GAAX,CAAkB,CAAEL,GAAIQ,cAAMC,MAAOH,EAAOI,KAAKD,MAAOE,OAAQL,EAAOI,KAAKC,UAC9E,QACE,OAAON,IELAO,EAAcC,0BAiBZC,EAfa,SAACC,GAAW,IAAD,EACXC,qBAAWZ,EAAa,CAChD,CAAEJ,GAAI,EAAGW,OAAQ,aAAcF,MAAO,YACtC,CAAET,GAAI,EAAGW,OAAQ,eAAgBF,MAAO,+BACxC,CAAET,GAAI,EAAGW,OAAQ,cAAeF,MAAO,kBACvC,CAAET,GAAI,EAAGW,OAAQ,YAAaF,MAAO,sBALF,mBAC9BQ,EAD8B,KACvBC,EADuB,KAQrC,OACE,kBAACN,EAAYO,SAAb,CAAsBC,MAAO,CAAEH,QAAOC,aACnCH,EAAMM,WCXPC,EAAS,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACRQ,EAAUM,qBAAWX,GAArBK,MAER,OACE,4BAASjB,GAAG,UACV,wBAAIC,UAAU,QAAQQ,GACtB,uBAAGR,UAAU,aAAb,sBAA6CgB,EAAMO,OAAnD,2BAKNF,EAAOG,aAAe,CACpBhB,MAAO,iBAOMa,Q,gBCpBTI,EAAW,SAAC,GAA0B,EAAxB1B,GAAyB,IAArBS,EAAoB,EAApBA,MAAOE,EAAa,EAAbA,OAC7B,OACE,wBAAIX,GAAG,aACL,6BAASC,UAAU,QACjB,2BAAG,gCAASU,IACZ,2BAAIF,IAGN,6BAASR,UAAU,SACjB,4BAAQA,UAAU,OAAlB,UACA,4BAAQA,UAAU,OAAlB,WAMRyB,EAASC,WAAa,CACpB3B,GAAI4B,IAAUC,OAAOC,WACrBrB,MAAOmB,IAAUG,OAAOD,WACxBnB,OAAQiB,IAAUG,OAAOD,YAGZJ,QCtBTM,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,OACE,6BAASjC,GAAG,SACV,2BAAIiC,KAKVD,EAAMP,aAAe,CACnBQ,YAAa,6BAOAD,QCAAE,EAdG,WAAO,IACfjB,EAAUM,qBAAWX,GAArBK,MAER,OAAOA,EAAMO,OAAS,EACpB,wBAAIxB,GAAG,cAEHiB,EAAMkB,KAAI,SAAAzB,GAAI,OAAI,kBAAC,EAAD,eAAU0B,IAAK1B,EAAKV,IAAQU,QAIhD,kBAAC,EAAD,CAAOuB,YAAY,wCCAVI,EAXE,WACf,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAQ5B,MAAM,cAEd,kBAAC,EAAD,QCiDS6B,EArDC,WAAO,IACbpB,EAAaK,qBAAWX,GAAxBM,SACFqB,EAAUC,cAFI,EAGMC,mBAAS,IAHf,mBAGbhC,EAHa,KAGNiC,EAHM,OAIQD,mBAAS,IAJjB,mBAIb9B,EAJa,KAILgC,EAJK,KAwBpB,OACE,0BAAMC,SAnBa,SAACC,GACpBA,EAAEC,iBAEF5B,EAAS,CACPX,KPfkB,WOeFG,KAAM,CACpBD,QAAOE,YAIX+B,EAAS,IACTC,EAAU,IACVJ,EAAQQ,KAAK,MAQiB/C,GAAG,YAC/B,6BACE,2BACEO,KAAK,OACLyC,YAAY,eACZC,UAAQ,EACR7B,MAAOX,EACPyC,SAAU,SAACL,GAAD,OAAOH,EAASG,EAAEM,OAAO/B,WAGvC,6BACE,2BACEb,KAAK,OACLyC,YAAY,gBACZC,UAAQ,EACR7B,MAAOT,EACPuC,SAAU,SAACL,GAAD,OAAOF,EAAUE,EAAEM,OAAO/B,WAIxC,6BAASnB,UAAU,iBACjB,4BAAQM,KAAK,SAAS6C,QA1BR,WAClBb,EAAQQ,KAAK,MAyBmC9C,UAAU,OAAtD,UACA,4BAAQM,KAAK,SAASN,UAAU,OAAhC,UCtCOoD,EAVC,WACd,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAQ5C,MAAM,aAEd,kBAAC,EAAD,QCoBS6C,MArBf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAUC,oBACvB,kBAAC,EAAD,KAEE,0BAAMvD,UAAU,OACd,kBAAC,EAAD,MAEA,6BAASA,UAAU,QACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACuD,KAAK,IAAIC,UAAWrB,IACjC,kBAAC,IAAD,CAAOnC,OAAK,EAACuD,KAAK,OAAOC,UAAWL,IACpC,kBAAC,IAAD,CAAOM,OAAQ,kBAAM,kBAAC,EAAD,CAAO1B,YAAY,yCCftD2B,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.5c4b7f4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav id=\"navigation\">\r\n      <ul className=\"nav-items\">\r\n        <li className=\"nav-item\">\r\n          <NavLink exact to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink exact to=\"/add\">Add Book</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink exact to=\"/about\">About</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import { ADD_BOOK } from '../types/types';\r\nimport { v1 } from 'uuid'\r\n\r\nconst bookReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOOK:\r\n      return [...state, { id: v1(), title: action.book.title, author: action.book.author }];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default bookReducer;","export const ADD_BOOK = 'ADD_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const EDIT_BOOK = 'EDIT_BOOK';","import React, { createContext, useReducer } from 'react';\r\nimport bookReducer from '../reducers/BookReducer';\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = (props) => {\r\n  const [books, dispatch] = useReducer(bookReducer, [\r\n    { id: 1, author: 'Mario Puzo', title: 'Sicilian' },\r\n    { id: 2, author: 'Stieg Larsen', title: 'Girl with the dragon tattoo' },\r\n    { id: 3, author: 'Marion Puzo', title: 'The Goodfather' },\r\n    { id: 4, author: 'Dan Brown', title: 'The DaVinci Code' },\r\n  ]);\r\n\r\n  return (\r\n    <BookContext.Provider value={{ books, dispatch }}>\r\n      {props.children}\r\n    </BookContext.Provider>\r\n  );\r\n}\r\n\r\nexport default BookContextProvider;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BookContext } from '../contexts/BookContext';\r\n\r\nconst Header = ({ title }) => {\r\n  const { books } = useContext(BookContext);\r\n\r\n  return (\r\n    < header id=\"header\" >\r\n      <h2 className=\"head\">{title}</h2>\r\n      <p className=\"paragraph\">Currently you have {books.length} books to get through</p>\r\n    </header >\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Book-List-App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookItem = ({ id, title, author }) => {\r\n  return (\r\n    <li id=\"book-item\">\r\n      <section className=\"left\">\r\n        <p><strong>{author}</strong></p>\r\n        <p>{title}</p>\r\n      </section>\r\n\r\n      <section className=\"right\">\r\n        <button className=\"btn\">Delete</button>\r\n        <button className=\"btn\">Edit</button>\r\n      </section>\r\n    </li>\r\n  );\r\n}\r\n\r\nBookItem.propsTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default BookItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Empty = ({ information }) => {\r\n  return (\r\n    <section id=\"empty\">\r\n      <p>{information}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nEmpty.defaultProps = {\r\n  information: 'No information to display'\r\n}\r\n\r\nEmpty.propTypes = {\r\n  information: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Empty;","import React, { useContext } from 'react';\r\nimport BookItem from './BookItem';\r\nimport Empty from '../components/Empty';\r\nimport { BookContext } from '../contexts/BookContext';\r\n\r\nconst BookItems = () => {\r\n  const { books } = useContext(BookContext);\r\n\r\n  return books.length > 0 ? (\r\n    <ul id=\"book-itmes\">\r\n      {\r\n        books.map(book => <BookItem key={book.id} {...book} />)\r\n      }\r\n    </ul>\r\n  ) : (\r\n      <Empty information=\"There are not any books to read...\" />\r\n    );\r\n}\r\n\r\nexport default BookItems;","import React, { Fragment } from 'react';\r\nimport Header from '../components/Header';\r\nimport BookItems from '../components/BookItems';\r\n\r\nconst BookList = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Book List\" />\r\n\r\n      <BookItems />\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default BookList;","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BookContext } from '../contexts/BookContext';\r\nimport { ADD_BOOK } from '../types/types';\r\n\r\nconst FormAdd = () => {\r\n  const { dispatch } = useContext(BookContext);\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({\r\n      type: ADD_BOOK, book: {\r\n        title, author\r\n      }\r\n    });\r\n\r\n    setTitle('');\r\n    setAuthor('');\r\n    history.push('/');\r\n  }\r\n\r\n  const handleClick = () => {\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} id=\"form-add\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add title...\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add author...\"\r\n          required\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <section className=\"btn-container\">\r\n        <button type=\"button\" onClick={handleClick} className=\"btn\">Cancel</button>\r\n        <button type=\"submit\" className=\"btn\">Add</button>\r\n      </section>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FormAdd;","import React, { Fragment } from 'react';\r\nimport Header from '../components/Header';\r\nimport FormAdd from '../components/FormAdd';\r\n\r\nconst AddBook = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Add Book\" />\r\n\r\n      <FormAdd />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AddBook;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport BookList from './views/BookList';\nimport BookContextProvider from './contexts/BookContext';\nimport AddBook from './views/AddBook';\nimport Empty from './components/Empty';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <BookContextProvider>\n\n        <main className=\"app\">\n          <Navigation />\n\n          <section className=\"view\">\n            <Switch>\n              <Route exact path=\"/\" component={BookList} />\n              <Route exact path=\"/add\" component={AddBook} />\n              <Route render={() => <Empty information=\"There is no such a route...\" />} />\n            </Switch>\n          </section>\n        </main>\n      </BookContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}